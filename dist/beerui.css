@charset "UTF-8";
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* ==========================================================================
   Component: Base
 ============================================================================ */
/**
 * Fix the flawed CSS box model - Yes, IE6's box model is better
 * Browser support: IE8+
 * via: http://paulirish.com/2012/box-sizing-border-box-ftw/
 */
*,
*:before,
*:after {
  box-sizing: border-box; }

/* normalize.css v3.0.2 | git.io/normalize */
/* Set <html> and <body> to inherit the height of the viewport */
html,
body {
  min-height: 100%; }

/**
 * 1. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 *    https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust
 */
html {
  -ms-text-size-adjust: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 1 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 * hgroup has been removed from the HTML5 (W3C) specification
 *        https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template,
script {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove text-decoration
 */
ins, a {
  text-decoration: none; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
  * 1. Corrects max-width behavior (2.) if padding and border are used
  * 2. Responsiveness: Sets a maxium width relative to the parent and auto scales the height
  * 3. Remove the gap between images and the bottom of their containers
  * 4. Remove border when inside `a` element in IE 8/9.
  * remove 2. for Issue #502
  */
img {
  box-sizing: border-box;
  /* 1 */
  vertical-align: middle;
  /* 3 */
  border: 0;
  /* 4 */ }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 0; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: Monaco, Menlo, Consolas, "Courier New", "FontAwesome", monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/*
 * 1. Improves consistency of cursor style for clickable elements
 * 2. Removes excess padding in IE 8/9.
 * 3. Address box sizing set to `content-box` in IE 8/9/10.
 */
input[type="radio"],
input[type="checkbox"] {
  cursor: pointer;
  /*1*/
  padding: 0;
  /*2*/
  box-sizing: border-box;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
  resize: vertical; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* AMUI Base
   ========================================================================== */
/**
 * `font-size` is set in `html` element to support the `rem` unit for font-sizes
 * NOTE: IE9 & IE10 do not recognize `rem` units when used with the
   `font` shorthand property.
 */
html {
  font-size: 10px;
  -webkit-tap-highlight-color: transparent; }

body {
  position: relative;
  background: #fff;
  font-family: "Segoe UI", "Lucida Grande", Helvetica, Arial, "Microsoft YaHei", FreeSans, Arimo, "Droid Sans","wenquanyi micro hei","Hiragino Sans GB", "Hiragino Sans GB W3", "FontAwesome", sans-serif;
  font-weight: normal;
  line-height: 1.6;
  color: #333;
  font-size: 16px; }

/**
 * 1. http://usabilitypost.com/2012/11/15/w-optimizelegibility-on-mobile-devices/
 * 2. http://maxvoltar.com/archive/-webkit-font-smoothing
 * NOTE: http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/
 * 3. http://maximilianhoffmann.com/posts/better-font-rendering-on-osx
 *    http://jaydenseric.com/blog/css-font-smoothing-for-firefox-mac
 */
body,
input,
textarea,
select,
button {
  text-rendering: optimizeLegibility;
  /* 1 */
  -webkit-font-smoothing: antialiased;
  /* 2 */
  -moz-osx-font-smoothing: grayscale;
  /* 3 Default: auto */
  -moz-font-feature-settings: "liga", "kern"; }

/**
 * links
 */
a {
  color: #0e90d2; }
  a:hover, a:focus {
    color: #095f8a; }

/* Insert */
ins {
  background: #ffa;
  color: #333; }

/**
 * Mark
 * Note: Addresses styling not present in IE 8/9.
 */
mark {
  background: #ffa;
  color: #333; }

/**
 * Abbreviation and definition
 */
abbr[title],
dfn[title] {
  cursor: help; }

dfn[title] {
  border-bottom: 1px dotted;
  font-style: normal; }

/* Spacing for block elements */
p,
hr,
ul,
ol,
dl,
blockquote,
pre,
address,
fieldset,
figure {
  margin: 0 0 1.6rem 0; }

* + p,
* + hr,
* + ul,
* + ol,
* + dl,
* + blockquote,
* + pre,
* + address,
* + fieldset,
* + figure {
  margin-top: 1.6rem; }

/* Headings
   ========================================================================== */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 1.6rem 0;
  font-weight: normal;
  font-size: 100%; }

h1 {
  font-size: 1.5em; }

h2 {
  font-size: 1.25em; }

* + h1,
* + h2,
* + h3,
* + h4,
* + h5,
* + h6 {
  margin-top: 2em; }

/* Ordered and unordered lists */
ul,
ol {
  padding-left: 2em; }

/* Reset margin for nested lists */
ul > li > ul,
ul > li > ol,
ol > li > ol,
ol > li > ul {
  margin: 1em 0; }

/* Description lists */
dt {
  font-weight: bold; }
  dt + dd {
    margin-top: .5em; }

dd {
  margin-left: 0; }
  dd + dt {
    margin-top: 1em; }

/**
 * Horizontal rule
 * 1. Address differences between Firefox and other browsers.
 */
hr {
  display: block;
  padding: 0;
  border: 0;
  height: 0;
  border-top: 1px solid #eee;
  /* 1 */
  box-sizing: content-box;
  /* 1 */ }

/* Address */
address {
  font-style: normal; }

/* Quotes */
blockquote {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 15px;
  border-left: 4px solid #ddd;
  font-family: Georgia, "Times New Roman", Times, Kai, "Kaiti SC", KaiTi, BiauKai, "FontAwesome", serif;
  /* Small print for identifying the source */
  /* Smaller margin if `small` follows */ }
  blockquote small {
    display: block;
    color: #eee;
    font-family: "Segoe UI", "Lucida Grande", Helvetica, Arial, "Microsoft YaHei", FreeSans, Arimo, "Droid Sans","wenquanyi micro hei","Hiragino Sans GB", "Hiragino Sans GB W3", "FontAwesome", sans-serif;
    text-align: right; }
  blockquote p:last-of-type {
    margin-bottom: 0; }

/* iframe */
iframe {
  border: 0; }

/* Forms
   ========================================================================== */
/**
  * Vertical alignment
  * Exclude `radio` and `checkbox` elements because the default `baseline` value aligns better with text
  */
button,
input:not([type="radio"]):not([type="checkbox"]),
select {
  vertical-align: middle; }

/* ios去掉黑色遮罩 */
div, a, button, input, textarea {
  -webkit-tap-highlight-color: transparent; }

/* 表单输入框placeholder的颜色值 */
input::-webkit-input-placeholder {
  color: #AAAAAA; }

input:focus::-webkit-input-placeholder {
  color: #EEEEEE; }

/* 水平网格 */
.grid-row {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .grid-row .row-1 {
    width: 8.33333%; }
  .grid-row .row-2 {
    width: 16.66667%; }
  .grid-row .row-3 {
    width: 25%; }
  .grid-row .row-4 {
    width: 33.33333%; }
  .grid-row .row-5 {
    width: 41.66667%; }
  .grid-row .row-6 {
    width: 50%; }
  .grid-row .row-7 {
    width: 58.33333%; }
  .grid-row .row-8 {
    width: 66.66667%; }
  .grid-row .row-9 {
    width: 75%; }
  .grid-row .row-10 {
    width: 83.33333%; }
  .grid-row .row-11 {
    width: 91.66667%; }
  .grid-row .row-12 {
    width: 100%; }

/* 垂直网格 */
.grid-col {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }
  .grid-col .col-1 {
    height: 8.33333%; }
  .grid-col .col-2 {
    height: 16.66667%; }
  .grid-col .col-3 {
    height: 25%; }
  .grid-col .col-4 {
    height: 33.33333%; }
  .grid-col .col-5 {
    height: 41.66667%; }
  .grid-col .col-6 {
    height: 50%; }
  .grid-col .col-7 {
    height: 58.33333%; }
  .grid-col .col-8 {
    height: 66.66667%; }
  .grid-col .col-9 {
    height: 75%; }
  .grid-col .col-10 {
    height: 83.33333%; }
  .grid-col .col-11 {
    height: 91.66667%; }
  .grid-col .col-12 {
    height: 100%; }

/* 偏移 */
.grid-row .offset-1,
.grid-col .offset-1 {
  margin-left: 8.33333%; }

.grid-row .offset-2,
.grid-col .offset-2 {
  margin-left: 16.66667%; }

.grid-row .offset-3,
.grid-col .offset-3 {
  margin-left: 25%; }

.grid-row .offset-4,
.grid-col .offset-4 {
  margin-left: 33.33333%; }

.grid-row .offset-5,
.grid-col .offset-5 {
  margin-left: 41.66667%; }

.grid-row .offset-6,
.grid-col .offset-6 {
  margin-left: 50%; }

.grid-row .offset-7,
.grid-col .offset-7 {
  margin-left: 58.33333%; }

.grid-row .offset-8,
.grid-col .offset-8 {
  margin-left: 66.66667%; }

.grid-row .offset-9,
.grid-col .offset-9 {
  margin-left: 75%; }

.grid-row .offset-10,
.grid-col .offset-10 {
  margin-left: 83.33333%; }

.grid-row .offset-11,
.grid-col .offset-11 {
  margin-left: 91.66667%; }

.grid-row .offset-12,
.grid-col .offset-12 {
  margin-left: 100%; }

/* 等分网格 */
.grid-row .avg,
.grid-col .avg {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1; }

/* 排序 */
.grid-row .order-1,
.grid-col .order-1 {
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1; }

.grid-row .order-2,
.grid-col .order-2 {
  -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
          order: 2; }

.grid-row .order-3,
.grid-col .order-3 {
  -webkit-box-ordinal-group: 4;
      -ms-flex-order: 3;
          order: 3; }

.grid-row .order-4,
.grid-col .order-4 {
  -webkit-box-ordinal-group: 5;
      -ms-flex-order: 4;
          order: 4; }

.grid-row .order-5,
.grid-col .order-5 {
  -webkit-box-ordinal-group: 6;
      -ms-flex-order: 5;
          order: 5; }

.grid-row .order-6,
.grid-col .order-6 {
  -webkit-box-ordinal-group: 7;
      -ms-flex-order: 6;
          order: 6; }

.grid-row .order-7,
.grid-col .order-7 {
  -webkit-box-ordinal-group: 8;
      -ms-flex-order: 7;
          order: 7; }

.grid-row .order-8,
.grid-col .order-8 {
  -webkit-box-ordinal-group: 9;
      -ms-flex-order: 8;
          order: 8; }

.grid-row .order-9,
.grid-col .order-9 {
  -webkit-box-ordinal-group: 10;
      -ms-flex-order: 9;
          order: 9; }

.grid-row .order-10,
.grid-col .order-10 {
  -webkit-box-ordinal-group: 11;
      -ms-flex-order: 10;
          order: 10; }

.grid-row .order-11,
.grid-col .order-11 {
  -webkit-box-ordinal-group: 12;
      -ms-flex-order: 11;
          order: 11; }

.grid-row .order-12,
.grid-col .order-12 {
  -webkit-box-ordinal-group: 13;
      -ms-flex-order: 12;
          order: 12; }

/* 限制最大宽度 */
.grid-wm {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto; }

/* 对齐方式 */
.grid-row.grid-left {
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start; }

.grid-row.grid-right {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.grid-row.grid-top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }

.grid-row.grid-bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end; }

.grid-row.grid-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.grid-row.grid-middle {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.grid-col.grid-left {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }

.grid-col.grid-right {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end; }

.grid-col.grid-top {
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start; }

.grid-col.grid-bottom {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.grid-col.grid-center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.grid-col.grid-middle {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.text-center {
  text-align: center; }

/*# sourceMappingURL=data:application/json;base64, */
